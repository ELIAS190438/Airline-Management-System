/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

/**
 *
 * @author FALCON DUBAI
 */
import com.itextpdf.text.Chunk;//azghar header
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;
import controller.Controller;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.time.LocalTime;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;

public class Book_Flight extends javax.swing.JFrame {

    /**
     * Creates new form Book_Flight
     */
    Controller c;

    public Book_Flight() {
        initComponents();
        getRootPane().setDefaultButton(jButton1);
        c = new Controller();
        ArrayList<String> Flights = c.getCode();
        for (int i = 0; i < Flights.size(); i++) {
            fr.addItem(Flights.get(i));
            to.addItem(Flights.get(i));
        }
        ArrayList<String> name = c.getPassengerNames();
        for (int i = 0; i < name.size(); i++) {
            passengern.addItem(name.get(i));
        }
        payment.add(visa);
        payment.add(cashh);
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField2 = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        payment = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        fr = new javax.swing.JComboBox<>();
        to = new javax.swing.JComboBox<>();
        depTime = new javax.swing.JComboBox<>();
        arrtime = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        bag = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        classes = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        date = new com.toedter.calendar.JDateChooser();
        Payment = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        cardn = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        cvv = new javax.swing.JTextField();
        Datee = new com.toedter.calendar.JDateChooser();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        billA = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        passengern = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        fligtn = new javax.swing.JComboBox<>();
        cashh = new javax.swing.JRadioButton();
        visa = new javax.swing.JRadioButton();

        jTextField2.setText("jTextField2");

        jLabel17.setText("jLabel17");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("AirLine Management System - Book a flight");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("From ");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setText("To");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Departure Time");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Arrival Time ");

        fr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                frActionPerformed(evt);
            }
        });

        to.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toActionPerformed(evt);
            }
        });

        depTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                depTimeActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setText("Baggage weight");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setText("Class Type");

        classes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "First", "Economy", "Business" }));

        jLabel15.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel15.setText("Date");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel9.setText("Card Number");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel10.setText("cvv");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel11.setText("Expiry Date ");

        jLabel12.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel12.setText("Billing Address");

        javax.swing.GroupLayout PaymentLayout = new javax.swing.GroupLayout(Payment);
        Payment.setLayout(PaymentLayout);
        PaymentLayout.setHorizontalGroup(
            PaymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PaymentLayout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(PaymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12))
                .addGap(33, 33, 33)
                .addGroup(PaymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cardn, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Datee, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(billA, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cvv, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(281, Short.MAX_VALUE))
        );
        PaymentLayout.setVerticalGroup(
            PaymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PaymentLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(PaymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cardn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGroup(PaymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PaymentLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel10))
                    .addGroup(PaymentLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(cvv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(35, 35, 35)
                .addGroup(PaymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Datee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addGap(24, 24, 24)
                .addGroup(PaymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(billA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(73, Short.MAX_VALUE))
        );

        jLabel21.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel21.setText("Total Price");

        jButton1.setText("Book Flight");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel8.setText("Payment Method");

        jButton2.setText("Show Available Times");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel13.setText("Passenger Name ");

        jLabel14.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel14.setText("Flight Number");

        cashh.setText("Cash");

        visa.setText("Visa");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel21)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING))
                                            .addGap(402, 402, 402)
                                            .addComponent(jButton1))
                                        .addComponent(Payment, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jLabel1))
                        .addContainerGap(183, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(fr, 0, 106, Short.MAX_VALUE)
                                    .addComponent(to, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(37, 37, 37)
                                .addComponent(bag, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(71, 71, 71)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(classes, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(passengern, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(cashh)
                                        .addGap(75, 75, 75)
                                        .addComponent(visa)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel15)
                            .addComponent(jLabel14))
                        .addGap(51, 51, 51)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton2)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(depTime, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(arrtime, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(fligtn, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(196, 196, 196))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(fr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(to, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(bag, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(classes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15)
                            .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(depTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(arrtime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(fligtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(passengern, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel21)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jButton1)
                    .addComponent(cashh)
                    .addComponent(visa))
                .addGap(35, 35, 35)
                .addComponent(Payment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int id = c.generateUniqueEmployeeId();
        int pid = c.generateUniqueEmployeeId();//paymentid
        String departure = fr.getSelectedItem().toString();
        String arrival = to.getSelectedItem().toString();
        Date flightDate = date.getDate();
        String weightText = bag.getText().trim();

// Validate required fields
        if (departure.isEmpty() || arrival.isEmpty() || weightText.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please fill in all required fields: departure, arrival, and baggage weight.");
            return;
        }

// Check departure and arrival are not the same
        if (departure.equals(arrival)) {
            JOptionPane.showMessageDialog(null, "Departure and arrival locations must be different.");
            return;
        }

// Validate flight date
        if (flightDate == null || flightDate.before(new Date())) {
            JOptionPane.showMessageDialog(null, "Please select a valid future flight date.");
            return;
        }

        int weight;
        try {
            weight = Integer.parseInt(weightText);
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "Invalid baggage weight. Please enter a number.");
            return;
        }

// Parse departure time
        String selectedDepTime = depTime.getSelectedItem().toString();
        LocalTime localDepTime = LocalTime.parse(selectedDepTime);
        java.sql.Time sqlDepTime = java.sql.Time.valueOf(localDepTime);

// Parse arrival time
        String selectedArrTime = arrtime.getSelectedItem().toString();
        LocalTime localArrTime = LocalTime.parse(selectedArrTime);
        java.sql.Time sqlArrTime = java.sql.Time.valueOf(localArrTime);

        String name = passengern.getSelectedItem().toString();
        String classType = classes.getSelectedItem().toString();
        String flight = fligtn.getSelectedItem().toString();
        java.sql.Date paymentDate = new java.sql.Date(System.currentTimeMillis());

// Load available flights (if not already loaded)
        ArrayList<String> flightNumbers = c.getFlightNumbersByDestination(departure, arrival);
        fligtn.removeAllItems();
        for (String fn : flightNumbers) {
            fligtn.addItem(fn);
        }

// Process payment and reservation for cash
        if (cashh.isSelected()) {
            // add reservation
            c.addReservation(id, name, classType, departure, arrival, flight, sqlDepTime, sqlArrTime, weight, flightDate);
            c.updateFlightReservationsCount(flight);
            int amount = c.getFlighttotal(flight);

            // add cash payment
            c.addPayment(pid, id, classType, paymentDate, amount, "CASH", 0, 0, null, "N/A", false);

            // Generate PDF receipt
            String[] data = c.getPaymentAsArray(pid);//from controller
            if (data != null) {
                try {
                    Document document = new Document();
                    PdfWriter.getInstance(document, new FileOutputStream("Payment_" + pid + ".pdf"));
                    document.open();

                    // Title
                    Font titleFont = FontFactory.getFont(FontFactory.HELVETICA_BOLD, 16);
                    Paragraph title = new Paragraph("Payment Receipt", titleFont);
                    title.setAlignment(Element.ALIGN_CENTER);
                    document.add(title);
                    document.add(Chunk.NEWLINE);

                    // Payment Info
                    document.add(new Paragraph("Payment ID: " + data[0]));
                    document.add(new Paragraph("Reservation ID: " + data[1]));
                    document.add(new Paragraph("Reservation Type: " + data[2]));
                    document.add(new Paragraph("Payment Date: " + data[3]));
                    document.add(new Paragraph("Amount Paid: $" + data[4]));
                    document.add(new Paragraph("Payment Method: " + data[5]));

                    if (data[5].equalsIgnoreCase("CARD")) {
                        document.add(new Paragraph("Card Number: " + data[6]));
                        document.add(new Paragraph("CVV: " + data[7]));
                        document.add(new Paragraph("Expiry Date: " + data[8]));
                        document.add(new Paragraph("Billing Address: " + data[9]));
                    }

                    document.add(new Paragraph("Refunded: " + ("1".equals(data[10]) ? "Yes" : "No")));
                    document.add(Chunk.NEWLINE);

                    // Reservation Info
                    Font subFont = FontFactory.getFont(FontFactory.HELVETICA_BOLD, 14);
                    document.add(new Paragraph("Reservation Details", subFont));
                    document.add(new Paragraph("Passenger Name: " + data[11]));
                    document.add(new Paragraph("Class: " + data[12]));
                    document.add(new Paragraph("From: " + data[13]));
                    document.add(new Paragraph("To: " + data[14]));
                    document.add(new Paragraph("Flight Number: " + data[15]));
                    document.add(new Paragraph("Flight Date: " + data[16]));
                    document.add(new Paragraph("Departure Time: " + data[17]));
                    document.add(new Paragraph("Arrival Time: " + data[18]));
                    document.add(new Paragraph("Baggage Weight: " + data[19] + " kg"));

                    document.close();
                } catch (DocumentException | FileNotFoundException e) {
                    e.printStackTrace();
                }
            }
        }

// Process payment and reservation for card
        if (visa.isSelected()) {
            // validate card fields
            String cardText = cardn.getText().trim();
            String cvvText = cvv.getText().trim();
            Date expiry = Datee.getDate();
            String address = billA.getText().trim();

            if (cardText.isEmpty() || cvvText.isEmpty() || address.isEmpty() || expiry == null) {
                JOptionPane.showMessageDialog(null, "Please complete all card payment details.");
                return;
            }

            int cardNumber;
            try {
                cardNumber = Integer.parseInt(cardText);
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(null, "Invalid card number. Please enter digits only.");
                return;
            }

            int cvvNum;
            try {
                cvvNum = Integer.parseInt(cvvText);
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(null, "Invalid CVV. Please enter digits only.");
                return;
            }

            java.sql.Date expiryDateSql = new java.sql.Date(expiry.getTime());

            // add reservation and card payment
            c.addReservation(id, name, classType, departure, arrival, flight, sqlDepTime, sqlArrTime, weight, flightDate);
            c.updateFlightReservationsCount(flight);
            int amount = c.getFlighttotal(flight);
            c.addPayment(pid, id, classType, paymentDate, amount, "CARD", cardNumber, cvvNum, expiryDateSql, address, false);

            // Generate PDF receipt
            String[] data = c.getPaymentAsArray(pid);
            if (data != null) {
                try {
                    Document document = new Document();
                    PdfWriter.getInstance(document, new FileOutputStream("Payment_" + pid + ".pdf"));
                    document.open();

                    // Title
                    Font titleFont = FontFactory.getFont(FontFactory.HELVETICA_BOLD, 16);
                    Paragraph title = new Paragraph("Payment Receipt", titleFont);
                    title.setAlignment(Element.ALIGN_CENTER);
                    document.add(title);
                    document.add(Chunk.NEWLINE);

                    // Payment Info
                    document.add(new Paragraph("Payment ID: " + data[0]));
                    document.add(new Paragraph("Reservation ID: " + data[1]));
                    document.add(new Paragraph("Reservation Type: " + data[2]));
                    document.add(new Paragraph("Payment Date: " + data[3]));
                    document.add(new Paragraph("Amount Paid: $" + data[4]));
                    document.add(new Paragraph("Payment Method: " + data[5]));

                    if (data[5].equalsIgnoreCase("CARD")) {
                        document.add(new Paragraph("Card Number: " + data[6]));
                        document.add(new Paragraph("CVV: " + data[7]));
                        document.add(new Paragraph("Expiry Date: " + data[8]));
                        document.add(new Paragraph("Billing Address: " + data[9]));
                    }

                    document.add(new Paragraph("Refunded: " + ("1".equals(data[10]) ? "Yes" : "No")));
                    document.add(Chunk.NEWLINE);

                    // Reservation Info
                    Font subFont = FontFactory.getFont(FontFactory.HELVETICA_BOLD, 14);
                    document.add(new Paragraph("Reservation Details", subFont));
                    document.add(new Paragraph("Passenger Name: " + data[11]));
                    document.add(new Paragraph("Class: " + data[12]));
                    document.add(new Paragraph("From: " + data[13]));
                    document.add(new Paragraph("To: " + data[14]));
                    document.add(new Paragraph("Flight Number: " + data[15]));
                    document.add(new Paragraph("Flight Date: " + data[16]));
                    document.add(new Paragraph("Departure Time: " + data[17]));
                    document.add(new Paragraph("Arrival Time: " + data[18]));
                    document.add(new Paragraph("Baggage Weight: " + data[19] + " kg"));

                    document.close();
                } catch (DocumentException | FileNotFoundException e) {
                    e.printStackTrace();
                }
            }
        }


    }//GEN-LAST:event_jButton1ActionPerformed

    private void depTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_depTimeActionPerformed
        String selectedTimeStr = depTime.getSelectedItem().toString();
        LocalTime localTime = LocalTime.parse(selectedTimeStr);
        java.sql.Time sqlTime = java.sql.Time.valueOf(localTime);

        c.getArrivalTimeByDeparture(sqlTime);

        arrtime.setSelectedItem(c.getArrivalTimeByDeparture(sqlTime));
    }//GEN-LAST:event_depTimeActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Date dates = date.getDate();
        ArrayList<String> times = c.getDepartureTimesByDate(dates);
        for (int i = 0; i < times.size(); i++) {
            depTime.addItem(times.get(i));
        }
        ArrayList<String> arrivalTime = c.getArrivalTimesByDate(dates);
        for (int i = 0; i < arrivalTime.size(); i++) {
            arrtime.addItem(arrivalTime.get(i));
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void toActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toActionPerformed
        String departue = fr.getSelectedItem().toString();
        String arrival = to.getSelectedItem().toString();
        ArrayList<String> flightn = c.getFlightNumbersByDestination(arrival, departue);
        for (int i = 0; i < flightn.size(); i++) {
            fligtn.addItem(flightn.get(i));
        }
    }//GEN-LAST:event_toActionPerformed

    private void frActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_frActionPerformed

    }//GEN-LAST:event_frActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Book_Flight.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Book_Flight.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Book_Flight.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Book_Flight.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Book_Flight().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser Datee;
    private javax.swing.JPanel Payment;
    private javax.swing.JComboBox<String> arrtime;
    private javax.swing.JTextField bag;
    private javax.swing.JTextField billA;
    private javax.swing.JTextField cardn;
    private javax.swing.JRadioButton cashh;
    private javax.swing.JComboBox<String> classes;
    private javax.swing.JTextField cvv;
    private com.toedter.calendar.JDateChooser date;
    private javax.swing.JComboBox<String> depTime;
    private javax.swing.JComboBox<String> fligtn;
    private javax.swing.JComboBox<String> fr;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JComboBox<String> passengern;
    private javax.swing.ButtonGroup payment;
    private javax.swing.JComboBox<String> to;
    private javax.swing.JRadioButton visa;
    // End of variables declaration//GEN-END:variables
}
